#!/bin/bash

# script must be called with one argument
if [[ $# -ne 1 ]]; then
  echo "No arguments found!"
  exit 1
fi

input=$1
# convert to lowercase
word=$(echo $input | tr '[:upper:]' '[:lower:]')

# cache config
cache_folder="/tmp/bashsaurus"
cache_file="$cache_folder/$word"

# Executes an http request if the cache file does not exist then
# cycles the words in the cache file after it has been created.
function main {
  mkdir -p $cache_folder

  # if cache doesn't exist, need to make the request
  if [[ ! -f $cache_file ]] ; then
    request
  fi

  cycle
}

# Takes the current word from the top of the cache and moves it
# to the bottom then prints it to the user.
function cycle {
  word=$(cat $cache_file | head -n 1)
  rest=$(cat $cache_file | tail -n +2)

  echo -e "$rest\n$word" > $cache_file

  echo $word

  exit 0
}

# Scrapes the website and writes the response into the cache
# file for that word.
function request {
  scrape_url="http://www.thesaurus.com/browse/$word"
  token_start="synonyms-0"
  token_end="filter-0"

  # use the location flag to respect 301 (page moved)
  html=$(curl -s $scrape_url --location)

  echo "$html" |\
    sed -n "/$token_start/,/$token_end/p" |\
    grep 'class="text"' |\
    sed 's/<.*>\(.*\)<.*>/\1/g' \
    > $cache_file
}

# execute last
main

